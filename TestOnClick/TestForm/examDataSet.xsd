<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="examDataSet" targetNamespace="http://tempuri.org/examDataSet.xsd" xmlns:mstns="http://tempuri.org/examDataSet.xsd" xmlns="http://tempuri.org/examDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="examConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="examConnectionString (Settings)" PropertyReference="ApplicationSettings.TestForm.Properties.Settings.GlobalReference.Default.examConnectionString" Provider="Devart.Data.MySql" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="answerTableAdapter" GeneratorDataComponentClassName="answerTableAdapter" Name="answer" UserDataComponentName="answerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="examConnectionString (Settings)" DbObjectName="exam.answer" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `exam`.`answer` (`answer`, `question_id`) VALUES (:answer, :question_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="answer" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="answer" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="question_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="question_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT answer, question_id FROM exam.answer</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="answer" DataSetColumn="answer" />
              <Mapping SourceColumn="question_id" DataSetColumn="question_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="questionTableAdapter" GeneratorDataComponentClassName="questionTableAdapter" Name="question" UserDataComponentName="questionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="examConnectionString (Settings)" DbObjectName="exam.question" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `exam`.`question` WHERE ((`question_id` = :Original_question_id) AND (`question_name` = :Original_question_name) AND (`difficulty` = :Original_difficulty))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_question_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="question_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_question_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="question_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_difficulty" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="difficulty" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `exam`.`question` (`question_name`, `difficulty`) VALUES (:question_name, :difficulty)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="question_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="question_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="difficulty" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="difficulty" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT question_id, question_name, difficulty FROM exam.question</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `exam`.`question` SET `question_name` = :question_name, `difficulty` = :difficulty WHERE ((`question_id` = :Original_question_id) AND (`question_name` = :Original_question_name) AND (`difficulty` = :Original_difficulty))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="question_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="question_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="difficulty" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="difficulty" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_question_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="question_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_question_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="question_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_difficulty" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="difficulty" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="question_id" DataSetColumn="question_id" />
              <Mapping SourceColumn="question_name" DataSetColumn="question_name" />
              <Mapping SourceColumn="difficulty" DataSetColumn="difficulty" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="resultTableAdapter" GeneratorDataComponentClassName="resultTableAdapter" Name="result" UserDataComponentName="resultTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="examConnectionString (Settings)" DbObjectName="exam.result" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `exam`.`result` WHERE ((`question_id` = :Original_question_id) AND (`correct_ans` = :Original_correct_ans))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_question_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="question_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_correct_ans" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="correct_ans" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `exam`.`result` (`question_id`, `correct_ans`) VALUES (:question_id, :correct_ans)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="question_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="question_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="correct_ans" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="correct_ans" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT question_id, correct_ans FROM exam.result</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `exam`.`result` SET `question_id` = :question_id, `correct_ans` = :correct_ans WHERE ((`question_id` = :Original_question_id) AND (`correct_ans` = :Original_correct_ans))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="question_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="question_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="correct_ans" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="correct_ans" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_question_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="question_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_correct_ans" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="correct_ans" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="question_id" DataSetColumn="question_id" />
              <Mapping SourceColumn="correct_ans" DataSetColumn="correct_ans" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="testTableAdapter" GeneratorDataComponentClassName="testTableAdapter" Name="test" UserDataComponentName="testTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="examConnectionString (Settings)" DbObjectName="exam.test" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `exam`.`test` WHERE ((`test_id` = :Original_test_id) AND (`score` = :Original_score))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_test_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="test_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_score" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="score" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `exam`.`test` (`test_id`, `score`) VALUES (:test_id, :score)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="test_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="test_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="score" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="score" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT test_id, score FROM exam.test</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `exam`.`test` SET `test_id` = :test_id, `score` = :score WHERE ((`test_id` = :Original_test_id) AND (`score` = :Original_score))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="test_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="test_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="score" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="score" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_test_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="test_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_score" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="score" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="test_id" DataSetColumn="test_id" />
              <Mapping SourceColumn="score" DataSetColumn="score" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="users_detailsTableAdapter" GeneratorDataComponentClassName="users_detailsTableAdapter" Name="users_details" UserDataComponentName="users_detailsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="examConnectionString (Settings)" DbObjectName="exam.users_details" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `exam`.`users_details` WHERE ((`user_id` = :Original_user_id) AND (`user_name` = :Original_user_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_user_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="user_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_user_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `exam`.`users_details` (`user_name`) VALUES (:user_name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="user_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT user_id, user_name FROM exam.users_details</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `exam`.`users_details` SET `user_name` = :user_name WHERE ((`user_id` = :Original_user_id) AND (`user_name` = :Original_user_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="user_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_user_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="user_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_user_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="user_id" DataSetColumn="user_id" />
              <Mapping SourceColumn="user_name" DataSetColumn="user_name" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="examDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="examDataSet" msprop:Generator_UserDSName="examDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="answer" msprop:Generator_TableClassName="answerDataTable" msprop:Generator_TableVarName="tableanswer" msprop:Generator_TablePropName="answer" msprop:Generator_RowDeletingName="answerRowDeleting" msprop:Generator_RowChangingName="answerRowChanging" msprop:Generator_RowEvHandlerName="answerRowChangeEventHandler" msprop:Generator_RowDeletedName="answerRowDeleted" msprop:Generator_UserTableName="answer" msprop:Generator_RowChangedName="answerRowChanged" msprop:Generator_RowEvArgName="answerRowChangeEvent" msprop:Generator_RowClassName="answerRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="answer" msprop:Generator_ColumnVarNameInTable="columnanswer" msprop:Generator_ColumnPropNameInRow="answer" msprop:Generator_ColumnPropNameInTable="answerColumn" msprop:Generator_UserColumnName="answer" type="xs:string" />
              <xs:element name="question_id" msprop:Generator_ColumnVarNameInTable="columnquestion_id" msprop:Generator_ColumnPropNameInRow="question_id" msprop:Generator_ColumnPropNameInTable="question_idColumn" msprop:Generator_UserColumnName="question_id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="question" msprop:Generator_TableClassName="questionDataTable" msprop:Generator_TableVarName="tablequestion" msprop:Generator_TablePropName="question" msprop:Generator_RowDeletingName="questionRowDeleting" msprop:Generator_RowChangingName="questionRowChanging" msprop:Generator_RowEvHandlerName="questionRowChangeEventHandler" msprop:Generator_RowDeletedName="questionRowDeleted" msprop:Generator_UserTableName="question" msprop:Generator_RowChangedName="questionRowChanged" msprop:Generator_RowEvArgName="questionRowChangeEvent" msprop:Generator_RowClassName="questionRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="question_id" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnquestion_id" msprop:Generator_ColumnPropNameInRow="question_id" msprop:Generator_ColumnPropNameInTable="question_idColumn" msprop:Generator_UserColumnName="question_id" type="xs:int" />
              <xs:element name="question_name" msprop:Generator_ColumnVarNameInTable="columnquestion_name" msprop:Generator_ColumnPropNameInRow="question_name" msprop:Generator_ColumnPropNameInTable="question_nameColumn" msprop:Generator_UserColumnName="question_name" type="xs:string" />
              <xs:element name="difficulty" msprop:Generator_ColumnVarNameInTable="columndifficulty" msprop:Generator_ColumnPropNameInRow="difficulty" msprop:Generator_ColumnPropNameInTable="difficultyColumn" msprop:Generator_UserColumnName="difficulty" type="xs:string" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="result" msprop:Generator_TableClassName="resultDataTable" msprop:Generator_TableVarName="tableresult" msprop:Generator_TablePropName="result" msprop:Generator_RowDeletingName="resultRowDeleting" msprop:Generator_RowChangingName="resultRowChanging" msprop:Generator_RowEvHandlerName="resultRowChangeEventHandler" msprop:Generator_RowDeletedName="resultRowDeleted" msprop:Generator_UserTableName="result" msprop:Generator_RowChangedName="resultRowChanged" msprop:Generator_RowEvArgName="resultRowChangeEvent" msprop:Generator_RowClassName="resultRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="question_id" msprop:Generator_ColumnVarNameInTable="columnquestion_id" msprop:Generator_ColumnPropNameInRow="question_id" msprop:Generator_ColumnPropNameInTable="question_idColumn" msprop:Generator_UserColumnName="question_id" type="xs:int" />
              <xs:element name="correct_ans" msprop:Generator_ColumnVarNameInTable="columncorrect_ans" msprop:Generator_ColumnPropNameInRow="correct_ans" msprop:Generator_ColumnPropNameInTable="correct_ansColumn" msprop:Generator_UserColumnName="correct_ans" type="xs:string" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="test" msprop:Generator_TableClassName="testDataTable" msprop:Generator_TableVarName="tabletest" msprop:Generator_TablePropName="test" msprop:Generator_RowDeletingName="testRowDeleting" msprop:Generator_RowChangingName="testRowChanging" msprop:Generator_RowEvHandlerName="testRowChangeEventHandler" msprop:Generator_RowDeletedName="testRowDeleted" msprop:Generator_UserTableName="test" msprop:Generator_RowChangedName="testRowChanged" msprop:Generator_RowEvArgName="testRowChangeEvent" msprop:Generator_RowClassName="testRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="test_id" msprop:Generator_ColumnVarNameInTable="columntest_id" msprop:Generator_ColumnPropNameInRow="test_id" msprop:Generator_ColumnPropNameInTable="test_idColumn" msprop:Generator_UserColumnName="test_id" type="xs:int" />
              <xs:element name="score" msprop:Generator_ColumnVarNameInTable="columnscore" msprop:Generator_ColumnPropNameInRow="score" msprop:Generator_ColumnPropNameInTable="scoreColumn" msprop:Generator_UserColumnName="score" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="user">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="user_id" type="xs:int" />
              <xs:element name="test_id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="users_details" msprop:Generator_TableClassName="users_detailsDataTable" msprop:Generator_TableVarName="tableusers_details" msprop:Generator_TablePropName="users_details" msprop:Generator_RowDeletingName="users_detailsRowDeleting" msprop:Generator_RowChangingName="users_detailsRowChanging" msprop:Generator_RowEvHandlerName="users_detailsRowChangeEventHandler" msprop:Generator_RowDeletedName="users_detailsRowDeleted" msprop:Generator_UserTableName="users_details" msprop:Generator_RowChangedName="users_detailsRowChanged" msprop:Generator_RowEvArgName="users_detailsRowChangeEvent" msprop:Generator_RowClassName="users_detailsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="user_id" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnuser_id" msprop:Generator_ColumnPropNameInRow="user_id" msprop:Generator_ColumnPropNameInTable="user_idColumn" msprop:Generator_UserColumnName="user_id" type="xs:int" />
              <xs:element name="user_name" msprop:Generator_ColumnVarNameInTable="columnuser_name" msprop:Generator_ColumnPropNameInRow="user_name" msprop:Generator_ColumnPropNameInTable="user_nameColumn" msprop:Generator_UserColumnName="user_name" type="xs:string" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:question" />
      <xs:field xpath="mstns:question_id" />
    </xs:unique>
    <xs:unique name="result_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:result" />
      <xs:field xpath="mstns:question_id" />
    </xs:unique>
    <xs:unique name="test_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:test" />
      <xs:field xpath="mstns:test_id" />
    </xs:unique>
    <xs:unique name="user_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:user" />
      <xs:field xpath="mstns:user_id" />
    </xs:unique>
    <xs:unique name="users_details_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:users_details" />
      <xs:field xpath="mstns:user_id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="qs_result_fk" msdata:parent="question" msdata:child="result" msdata:parentkey="question_id" msdata:childkey="question_id" msprop:Generator_UserChildTable="result" msprop:Generator_ChildPropName="GetresultRows" msprop:Generator_UserRelationName="qs_result_fk" msprop:Generator_ParentPropName="questionRow" msprop:Generator_RelationVarName="relationqs_result_fk" msprop:Generator_UserParentTable="question" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>